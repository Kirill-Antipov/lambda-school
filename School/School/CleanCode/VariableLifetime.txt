1. глобальная конфигурация DefaultCurrency перенесеа из модуля Сommon общего для всего проекта в отдельный класс кофигуации модуля Transactions

2. логика сбора ошибок валидации вынесена в отдельную функию string[] Validate(...) что позволило убрать из более широкой видимости переменную errors 

3. создана локальная функция CalculateTotalPresentValue в методе CalculatePresentValue что позволило уменшить область вилимости перменной totalPV(количесвто строк от расчета до использования - 39)

decimal CalculateTotalPresentValue(decimal discountRate)
{
    decimal totalPV = 0;
    foreach (var cashFlow in cashFlows)
    {
        totalPV += CalculateSinglePresentValue(cashFlow, discountRate);
    }
    return totalPV;
}

4. создана локальная функция FindDiscountRate в методе CalculatePresentValue что позволило уменшить область видимости перменной discontRate (количесвто строк от расчета до использования - 30)

5. из метода ProcessWeeklyDepositReport класса вынесена функция GetFormattedFile которая считывает присланный файл в массив строк с некоторыми манипуляциями, в итоге скрыто из более широкого доступа 2 перменные

6. из метода ProcessRefund вынесен метод SendNotification, в итоге понижена область видимости 2 перменных notificationBody и resendCount

7. код расчета хеш подписи сообщения вынесен в отдельный класс, 3 переменные уменьшиди срок своей жизни

8. код попытки повтороного рассчета комисии вынесен в локальную функцию метода, что избавило от лишнего сущестовавания перменную success

9. вынесена функция расчета комиссии по отдельному пользовтелю что освободило от необходимости тянуть свой век перменные userTopDeposit, userAverageDeposit

10. код отвественный за расчет парметров касающихся опердления платежа от 3 стороны вынесен из метода в класс ThirdPartyPayment - в итоге скрыты 5 перменных

11. переменная bonusLeft внесена в цикл for, вмсето объявления вне цикла
for(var bonusLeft = GetBonusLeftover(); bonuesLeft > 0; bonusLeft--)
{
	...
}

12. поле PostponeDays класса внесенно как переменная в 2 метода которые ее использовали (никакого смысла в shared состоянии не было, просто кто то переиспользовал поле в своих целях)

13. глобальная переменная SilverLevelThreshold вынесена из глобальной конфинурации модуля FraudEngine как приватное поле класса FraudEngineProcessor тк используется только в нем

14. поле ShippingLimit внесено как переменная в метод класса, тк испоьзуется только в нем

15. перменная WhiltelistWeeklyThreshold общей конфигурации модуля VirtualBanking становится private полем класса ThresholdService, видимо после какого то из рефакторингов потерялся смысл в ее глобальности
